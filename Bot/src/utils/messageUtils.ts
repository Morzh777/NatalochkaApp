import { BotContext } from "../bot/BotSettings.js";

/**
 * –ü—Ä–∏–≤–∞—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ—Ç –û–î–ù–û —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ id.
 * –õ–æ–≤–∏—Ç –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ª–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏.
 */
async function deleteMessageSafe(ctx: BotContext, messageId?: number, label = "—Å–æ–æ–±—â–µ–Ω–∏–µ") {
    if (!ctx.chat || !messageId) return;
    const chatId = ctx.chat.id;

    try {
        await ctx.api.deleteMessage(chatId, messageId);
    } catch (error: any) {
        if (error.description?.includes("message to delete not found")) {
            console.warn(`‚ö†Ô∏è ${label} —É–∂–µ —É–¥–∞–ª–µ–Ω–æ (#${messageId})`);
        } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${label} #${messageId}:`, error);
        }
    }
}

/**
 * –£–¥–∞–ª—è–µ—Ç –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –±–æ—Ç–æ–º:
 * - –ø–æ–¥—Å–∫–∞–∑–∫–∏ (messageIds)
 * - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (botMessageId)
 * - –æ–ø–∏—Å–∞–Ω–∏–µ (lastDescriptionMessageId)
 * - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (tempMessageId)
 */
export async function deleteAllBotMessages(ctx: BotContext) {
    if (!ctx.chat) return;

    // üßπ –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –º–∞—Å—Å–∏–≤–∞
    for (const messageId of ctx.session.messageIds || []) {
        await deleteMessageSafe(ctx, messageId, "—Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ messageIds");
    }
    ctx.session.messageIds = [];

    // üßπ –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await deleteMessageSafe(ctx, ctx.session.botMessageId, "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
    ctx.session.botMessageId = undefined;

    // üßπ –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    await deleteMessageSafe(ctx, ctx.session.lastDescriptionMessageId, "–æ–ø–∏—Å–∞–Ω–∏–µ");
    ctx.session.lastDescriptionMessageId = undefined;

    // üßπ –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    await deleteMessageSafe(ctx, ctx.session.tempMessageId, "–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ");
    ctx.session.tempMessageId = undefined;
}

/**
 * –£–¥–∞–ª—è–µ—Ç –¢–û–õ–¨–ö–û –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (tempMessageId)
 */
export async function deleteTempMessageOnly(ctx: BotContext) {
    if (!ctx.chat) return;

    await deleteMessageSafe(ctx, ctx.session.tempMessageId, "–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ");
    ctx.session.tempMessageId = undefined;
}
export async function deleteMessage(ctx: BotContext, messageId?: number, label = "—Å–æ–æ–±—â–µ–Ω–∏–µ") {
    if (!ctx.chat || !messageId) return;
    const chatId = ctx.chat.id;

    try {
        await ctx.api.deleteMessage(chatId, messageId);
    } catch (error: any) {
        if (error.description?.includes("message to delete not found")) {
            console.warn(`‚ö†Ô∏è ${label} —É–∂–µ —É–¥–∞–ª–µ–Ω–æ (#${messageId})`);
        } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${label} #${messageId}:`, error);
        }
    }
}