import { Bot } from "grammy";
import { BotContext } from "../BotSettings.js";
import { PaymentService } from "../../services/PaymentService.js";
import { Flow } from "../../types/Flow.js";
import {deleteAllBotMessages} from "../../utils/messageUtils.js";
import {showPremiumPitch} from "../../utils/checkPremiumAccess.js";



export function registerBuyCommand(bot: Bot<BotContext>) {
    bot.callbackQuery("buy", async (ctx) => {
        console.log("üî• –ö–Ω–æ–ø–∫–∞ 'buy' –Ω–∞–∂–∞—Ç–∞");
        await ctx.answerCallbackQuery();
        ctx.session.flow = Flow.buy;
        await PaymentService.sendInvoice(ctx);
    });

    bot.on("pre_checkout_query", async (ctx) => {
        await PaymentService.handlePreCheckout(ctx);
    });

    bot.on("message:successful_payment", async (ctx) => {
        await deleteAllBotMessages(ctx);

        const confirmationMessage = await PaymentService.handleSuccessfulPayment(ctx);

        ctx.session.messageIds ??= [];
        if (confirmationMessage?.message_id) {
            ctx.session.messageIds.push(confirmationMessage.message_id);
        }

        ctx.session.flow = Flow.MainCalculation;
    });
    bot.callbackQuery('enter_promo', async (ctx) => {
        await deleteAllBotMessages(ctx); // –µ—Å–ª–∏ —á–∏—Å—Ç–∏—à—å —Å–æ–æ–±—â–µ–Ω–∏—è

        const msg = await ctx.reply("üîë –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–º–∏—É–º–∞:");
        ctx.session.messageIds = [...(ctx.session.messageIds || []), msg.message_id];

        ctx.session.flow = Flow.EnterPromo;
        ctx.session.state = undefined;

        await ctx.answerCallbackQuery(); // –∑–∞–∫—Ä–æ–µ—Ç –∫–Ω–æ–ø–∫—É
    });
    bot.callbackQuery("buy_premium_now", async (ctx) => {
        await ctx.answerCallbackQuery();
        await showPremiumPitch(ctx); // üëà –ø–µ—Ä–µ–¥–∞—ë–º ctx –≤–Ω—É—Ç—Ä—å
    });
    bot.callbackQuery("buy_premium", async (ctx) => {
        await ctx.answerCallbackQuery();
        await PaymentService.sendInvoice(ctx); // üëà –Ω–∞–ø—Ä—è–º—É—é –∏–Ω–≤–æ–π—Å
    });
}

